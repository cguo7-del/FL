"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/answer",{

/***/ "./lib/supabase.js":
/*!*************************!*\
  !*** ./lib/supabase.js ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dbOperations: function() { return /* binding */ dbOperations; },\n/* harmony export */   supabase: function() { return /* binding */ supabase; }\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"./node_modules/@supabase/supabase-js/dist/module/index.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\n// Supabase配置 - 支持环境变量和fallback\nconst supabaseUrl = process.env.SUPABASE_URL || \"https://crnfwlpcxrnqfgwqnmun.supabase.co\";\nconst supabaseAnonKey = process.env.SUPABASE_ANON_KEY || \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNybmZ3bHBjeHJucWZnd3FubXVuIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTUxNTAzMDQsImV4cCI6MjA3MDcyNjMwNH0.g_HmFQQiuGW2TZRzZ5gqCj098DZy6iwn_xQAE6kEUEI\";\n// 创建Supabase客户端实例\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey);\n// 数据库操作函数\nconst dbOperations = {\n    // 暴露 supabase 客户端实例\n    supabase,\n    // 插入数据\n    async insert (table, data) {\n        const { data: result, error } = await supabase.from(table).insert(data).select();\n        if (error) {\n            console.error(\"插入数据错误:\", error);\n            throw error;\n        }\n        return result;\n    },\n    // 查询数据\n    async select (table) {\n        let filters = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        let query = supabase.from(table).select(\"*\");\n        // 应用过滤条件\n        Object.entries(filters).forEach((param)=>{\n            let [key, value] = param;\n            query = query.eq(key, value);\n        });\n        const { data, error } = await query;\n        if (error) {\n            console.error(\"查询数据错误:\", error);\n            throw error;\n        }\n        return data;\n    },\n    // 更新数据\n    async update (table, id, data) {\n        const { data: result, error } = await supabase.from(table).update(data).eq(\"id\", id).select();\n        if (error) {\n            console.error(\"更新数据错误:\", error);\n            throw error;\n        }\n        return result;\n    },\n    // 删除数据\n    async delete (table, id) {\n        const { error } = await supabase.from(table).delete().eq(\"id\", id);\n        if (error) {\n            console.error(\"删除数据错误:\", error);\n            throw error;\n        }\n        return true;\n    },\n    // 测试连接\n    async testConnection () {\n        try {\n            // 使用简单的RPC调用来测试连接\n            const { data, error } = await supabase.rpc(\"version\");\n            if (error) {\n                // 如果RPC调用失败，尝试查询一个可能不存在的表来测试连接\n                const { error: testError } = await supabase.from(\"test_connection_table\").select(\"*\").limit(1);\n                // 如果错误是表不存在，说明连接正常\n                if (testError && (testError.code === \"PGRST116\" || testError.code === \"42P01\")) {\n                    console.log(\"数据库连接成功!\");\n                    return true;\n                }\n                console.error(\"数据库连接测试失败:\", testError || error);\n                return false;\n            }\n            console.log(\"数据库连接成功!\");\n            return true;\n        } catch (err) {\n            console.error(\"连接测试异常:\", err);\n            return false;\n        }\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q1psQixRQUFRSCxLQUFLLENBQUMsV0FBV3FCO1lBQ3pCLE9BQU87UUFDVDtJQUNGO0FBQ0YsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9saWIvc3VwYWJhc2UuanM/MTU5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tICdAc3VwYWJhc2Uvc3VwYWJhc2UtanMnXG5cbi8vIFN1cGFiYXNl6YWN572uIC0g5pSv5oyB546v5aKD5Y+Y6YeP5ZKMZmFsbGJhY2tcbmNvbnN0IHN1cGFiYXNlVXJsID0gcHJvY2Vzcy5lbnYuU1VQQUJBU0VfVVJMIHx8ICdodHRwczovL2NybmZ3bHBjeHJucWZnd3FubXVuLnN1cGFiYXNlLmNvJ1xuY29uc3Qgc3VwYWJhc2VBbm9uS2V5ID0gcHJvY2Vzcy5lbnYuU1VQQUJBU0VfQU5PTl9LRVkgfHwgJ2V5SmhiR2NpT2lKSVV6STFOaUlzSW5SNWNDSTZJa3BYVkNKOS5leUpwYzNNaU9pSnpkWEJoWW1GelpTSXNJbkpsWmlJNkltTnlibVozYkhCamVISnVjV1puZDNGdWJYVnVJaXdpY205c1pTSTZJbUZ1YjI0aUxDSnBZWFFpT2pFM05UVXhOVEF6TURRc0ltVjRjQ0k2TWpBM01EY3lOak13TkgwLmdfSG1GUVFpdUdXMlRaUnpaNWdxQ2owOThEWnk2aXduX3hRQUU2a0VVRUknXG5cbi8vIOWIm+W7ulN1cGFiYXNl5a6i5oi356uv5a6e5L6LXG5leHBvcnQgY29uc3Qgc3VwYWJhc2UgPSBjcmVhdGVDbGllbnQoc3VwYWJhc2VVcmwsIHN1cGFiYXNlQW5vbktleSlcblxuLy8g5pWw5o2u5bqT5pON5L2c5Ye95pWwXG5leHBvcnQgY29uc3QgZGJPcGVyYXRpb25zID0ge1xuICAvLyDmmrTpnLIgc3VwYWJhc2Ug5a6i5oi356uv5a6e5L6LXG4gIHN1cGFiYXNlLFxuICAvLyDmj5LlhaXmlbDmja5cbiAgYXN5bmMgaW5zZXJ0KHRhYmxlLCBkYXRhKSB7XG4gICAgY29uc3QgeyBkYXRhOiByZXN1bHQsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgLmZyb20odGFibGUpXG4gICAgICAuaW5zZXJ0KGRhdGEpXG4gICAgICAuc2VsZWN0KClcbiAgICBcbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ+aPkuWFpeaVsOaNrumUmeivrzonLCBlcnJvcilcbiAgICAgIHRocm93IGVycm9yXG4gICAgfVxuICAgIHJldHVybiByZXN1bHRcbiAgfSxcblxuICAvLyDmn6Xor6LmlbDmja5cbiAgYXN5bmMgc2VsZWN0KHRhYmxlLCBmaWx0ZXJzID0ge30pIHtcbiAgICBsZXQgcXVlcnkgPSBzdXBhYmFzZS5mcm9tKHRhYmxlKS5zZWxlY3QoJyonKVxuICAgIFxuICAgIC8vIOW6lOeUqOi/h+a7pOadoeS7tlxuICAgIE9iamVjdC5lbnRyaWVzKGZpbHRlcnMpLmZvckVhY2goKFtrZXksIHZhbHVlXSkgPT4ge1xuICAgICAgcXVlcnkgPSBxdWVyeS5lcShrZXksIHZhbHVlKVxuICAgIH0pXG4gICAgXG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgcXVlcnlcbiAgICBcbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ+afpeivouaVsOaNrumUmeivrzonLCBlcnJvcilcbiAgICAgIHRocm93IGVycm9yXG4gICAgfVxuICAgIHJldHVybiBkYXRhXG4gIH0sXG5cbiAgLy8g5pu05paw5pWw5o2uXG4gIGFzeW5jIHVwZGF0ZSh0YWJsZSwgaWQsIGRhdGEpIHtcbiAgICBjb25zdCB7IGRhdGE6IHJlc3VsdCwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAuZnJvbSh0YWJsZSlcbiAgICAgIC51cGRhdGUoZGF0YSlcbiAgICAgIC5lcSgnaWQnLCBpZClcbiAgICAgIC5zZWxlY3QoKVxuICAgIFxuICAgIGlmIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcign5pu05paw5pWw5o2u6ZSZ6K+vOicsIGVycm9yKVxuICAgICAgdGhyb3cgZXJyb3JcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdFxuICB9LFxuXG4gIC8vIOWIoOmZpOaVsOaNrlxuICBhc3luYyBkZWxldGUodGFibGUsIGlkKSB7XG4gICAgY29uc3QgeyBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgIC5mcm9tKHRhYmxlKVxuICAgICAgLmRlbGV0ZSgpXG4gICAgICAuZXEoJ2lkJywgaWQpXG4gICAgXG4gICAgaWYgKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCfliKDpmaTmlbDmja7plJnor686JywgZXJyb3IpXG4gICAgICB0aHJvdyBlcnJvclxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZVxuICB9LFxuXG4gIC8vIOa1i+ivlei/nuaOpVxuICBhc3luYyB0ZXN0Q29ubmVjdGlvbigpIHtcbiAgICB0cnkge1xuICAgICAgLy8g5L2/55So566A5Y2V55qEUlBD6LCD55So5p2l5rWL6K+V6L+e5o6lXG4gICAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZS5ycGMoJ3ZlcnNpb24nKVxuICAgICAgXG4gICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgLy8g5aaC5p6cUlBD6LCD55So5aSx6LSl77yM5bCd6K+V5p+l6K+i5LiA5Liq5Y+v6IO95LiN5a2Y5Zyo55qE6KGo5p2l5rWL6K+V6L+e5o6lXG4gICAgICAgIGNvbnN0IHsgZXJyb3I6IHRlc3RFcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgICAgICAuZnJvbSgndGVzdF9jb25uZWN0aW9uX3RhYmxlJylcbiAgICAgICAgICAuc2VsZWN0KCcqJylcbiAgICAgICAgICAubGltaXQoMSlcbiAgICAgICAgXG4gICAgICAgIC8vIOWmguaenOmUmeivr+aYr+ihqOS4jeWtmOWcqO+8jOivtOaYjui/nuaOpeato+W4uFxuICAgICAgICBpZiAodGVzdEVycm9yICYmICh0ZXN0RXJyb3IuY29kZSA9PT0gJ1BHUlNUMTE2JyB8fCB0ZXN0RXJyb3IuY29kZSA9PT0gJzQyUDAxJykpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygn5pWw5o2u5bqT6L+e5o6l5oiQ5YqfIScpXG4gICAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgY29uc29sZS5lcnJvcign5pWw5o2u5bqT6L+e5o6l5rWL6K+V5aSx6LSlOicsIHRlc3RFcnJvciB8fCBlcnJvcilcbiAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICB9XG4gICAgICBcbiAgICAgIGNvbnNvbGUubG9nKCfmlbDmja7lupPov57mjqXmiJDlip8hJylcbiAgICAgIHJldHVybiB0cnVlXG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCfov57mjqXmtYvor5XlvILluLg6JywgZXJyKVxuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuICB9XG59Il0sIm5hbWVzIjpbImNyZWF0ZUNsaWVudCIsInN1cGFiYXNlVXJsIiwicHJvY2VzcyIsImVudiIsIlNVUEFCQVNFX1VSTCIsInN1cGFiYXNlQW5vbktleSIsIlNVUEFCQVNFX0FOT05fS0VZIiwic3VwYWJhc2UiLCJkYk9wZXJhdGlvbnMiLCJpbnNlcnQiLCJ0YWJsZSIsImRhdGEiLCJyZXN1bHQiLCJlcnJvciIsImZyb20iLCJzZWxlY3QiLCJjb25zb2xlIiwiZmlsdGVycyIsInF1ZXJ5IiwiT2JqZWN0IiwiZW50cmllcyIsImZvckVhY2giLCJrZXkiLCJ2YWx1ZSIsImVxIiwidXBkYXRlIiwiaWQiLCJkZWxldGUiLCJ0ZXN0Q29ubmVjdGlvbiIsInJwYyIsInRlc3RFcnJvciIsImxpbWl0IiwiY29kZSIsImxvZyIsImVyciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./lib/supabase.js\n"));

/***/ })

});