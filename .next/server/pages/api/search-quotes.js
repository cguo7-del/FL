"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/search-quotes";
exports.ids = ["pages/api/search-quotes"];
exports.modules = {

/***/ "@supabase/supabase-js":
/*!****************************************!*\
  !*** external "@supabase/supabase-js" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("@supabase/supabase-js");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsearch-quotes&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fsearch-quotes.js&middlewareConfigBase64=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsearch-quotes&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fsearch-quotes.js&middlewareConfigBase64=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_search_quotes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/search-quotes.js */ \"(api)/./pages/api/search-quotes.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_search_quotes_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_search_quotes_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/search-quotes\",\n        pathname: \"/api/search-quotes\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_search_quotes_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnNlYXJjaC1xdW90ZXMmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyUyRmFwaSUyRnNlYXJjaC1xdW90ZXMuanMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDeUQ7QUFDekQ7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLHdEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyx3REFBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mYW5nbHVlLXdlYnNpdGUvP2VkNmQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2FwaS9zZWFyY2gtcXVvdGVzLmpzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvc2VhcmNoLXF1b3Rlc1wiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3NlYXJjaC1xdW90ZXNcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsearch-quotes&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fsearch-quotes.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/supabase.js":
/*!*************************!*\
  !*** ./lib/supabase.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authOperations: () => (/* binding */ authOperations),\n/* harmony export */   collectionOperations: () => (/* binding */ collectionOperations),\n/* harmony export */   dbOperations: () => (/* binding */ dbOperations),\n/* harmony export */   localizeSupabaseError: () => (/* binding */ localizeSupabaseError),\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"@supabase/supabase-js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__);\n\n// Supabase配置 - 支持环境变量和fallback\nconst supabaseUrl = process.env.SUPABASE_URL || \"https://crnfwlpcxrnqfgwqnmun.supabase.co\";\nconst supabaseAnonKey = process.env.SUPABASE_ANON_KEY || \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNybmZ3bHBjeHJucWZnd3FubXVuIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTUxNTAzMDQsImV4cCI6MjA3MDcyNjMwNH0.g_HmFQQiuGW2TZRzZ5gqCj098DZy6iwn_xQAE6kEUEI\";\n// 创建Supabase客户端实例\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey);\n// Supabase错误信息本地化\nconst localizeSupabaseError = (error)=>{\n    const errorMessages = {\n        \"Invalid login credentials\": \"邮箱或密码错误\",\n        \"Email not confirmed\": \"邮箱未验证，请检查您的邮箱\",\n        \"User already registered\": \"该邮箱已注册\",\n        \"Password should be at least 6 characters\": \"密码至少需要6位字符\",\n        \"Signup requires a valid password\": \"注册需要有效的密码\",\n        \"Invalid email\": \"邮箱格式不正确\",\n        \"Email rate limit exceeded\": \"邮件发送频率过高，请稍后再试\",\n        \"Too many requests\": \"请求过于频繁，请稍后再试\",\n        \"Network request failed\": \"网络请求失败，请检查网络连接\",\n        \"User not found\": \"用户不存在\",\n        \"Email already taken\": \"该邮箱已被使用\",\n        \"Weak password\": \"密码强度不够，请使用更复杂的密码\",\n        \"New password should be different from the old password\": \"新密码不能与旧密码相同\",\n        \"new password should be different from the old password\": \"新密码不能与旧密码相同\",\n        \"Password update failed\": \"密码更新失败，请稍后重试\",\n        \"Session not found\": \"会话已过期，请重新获取重置链接\",\n        \"Invalid recovery token\": \"重置链接无效或已过期，请重新申请\",\n        \"Auth session missing\": \"认证会话缺失，请重新获取重置链接\"\n    };\n    // 处理不同的错误格式\n    let errorMessage = \"\";\n    if (typeof error === \"string\") {\n        errorMessage = error;\n    } else if (error?.message) {\n        errorMessage = error.message;\n    } else if (error?.error_description) {\n        errorMessage = error.error_description;\n    }\n    // 检查是否包含新旧密码相同的错误信息\n    if (errorMessage.toLowerCase().includes(\"new password should be different\")) {\n        return \"新密码不能与旧密码相同\";\n    }\n    return errorMessages[errorMessage] || errorMessage || \"发生未知错误，请稍后重试\";\n};\n// 认证相关功能\nconst authOperations = {\n    // 用户注册\n    async signUp (email, password, username) {\n        try {\n            const siteUrl = \"http://localhost:3001\" || 0;\n            const { data, error } = await supabase.auth.signUp({\n                email,\n                password,\n                options: {\n                    data: {\n                        username: username\n                    },\n                    emailRedirectTo: `${siteUrl}/auth`\n                }\n            });\n            if (error) {\n                throw new Error(localizeSupabaseError(error));\n            }\n            return data;\n        } catch (error) {\n            throw new Error(localizeSupabaseError(error));\n        }\n    },\n    // 用户登录\n    async signIn (email, password) {\n        try {\n            const { data, error } = await supabase.auth.signInWithPassword({\n                email,\n                password\n            });\n            if (error) {\n                throw new Error(localizeSupabaseError(error));\n            }\n            return data;\n        } catch (error) {\n            throw new Error(localizeSupabaseError(error));\n        }\n    },\n    // 用户登出\n    async signOut () {\n        try {\n            const { error } = await supabase.auth.signOut();\n            if (error) {\n                throw new Error(localizeSupabaseError(error));\n            }\n            return true;\n        } catch (error) {\n            throw new Error(localizeSupabaseError(error));\n        }\n    },\n    // 获取当前用户\n    async getCurrentUser () {\n        try {\n            const { data: { user }, error } = await supabase.auth.getUser();\n            if (error) {\n                throw new Error(localizeSupabaseError(error));\n            }\n            return user;\n        } catch (error) {\n            throw new Error(localizeSupabaseError(error));\n        }\n    },\n    // 监听认证状态变化\n    onAuthStateChange (callback) {\n        return supabase.auth.onAuthStateChange(callback);\n    }\n};\n// 数据库操作函数\nconst dbOperations = {\n    // 暴露 supabase 客户端实例\n    supabase,\n    // 插入数据\n    async insert (table, data) {\n        const { data: result, error } = await supabase.from(table).insert(data).select();\n        if (error) {\n            console.error(\"插入数据错误:\", error);\n            throw error;\n        }\n        return result;\n    },\n    // 查询数据\n    async select (table, filters = {}) {\n        let query = supabase.from(table).select(\"*\");\n        // 应用过滤条件\n        Object.entries(filters).forEach(([key, value])=>{\n            query = query.eq(key, value);\n        });\n        const { data, error } = await query;\n        if (error) {\n            console.error(\"查询数据错误:\", error);\n            throw error;\n        }\n        return data;\n    },\n    // 更新数据\n    async update (table, id, data) {\n        const { data: result, error } = await supabase.from(table).update(data).eq(\"id\", id).select();\n        if (error) {\n            console.error(\"更新数据错误:\", error);\n            throw error;\n        }\n        return result;\n    },\n    // 删除数据\n    async delete (table, id) {\n        const { error } = await supabase.from(table).delete().eq(\"id\", id);\n        if (error) {\n            console.error(\"删除数据错误:\", error);\n            throw error;\n        }\n        return true;\n    },\n    // 测试连接\n    async testConnection () {\n        try {\n            // 使用简单的RPC调用来测试连接\n            const { data, error } = await supabase.rpc(\"version\");\n            if (error) {\n                // 如果RPC调用失败，尝试查询一个可能不存在的表来测试连接\n                const { error: testError } = await supabase.from(\"test_connection_table\").select(\"*\").limit(1);\n                // 如果错误是表不存在，说明连接正常\n                if (testError && (testError.code === \"PGRST116\" || testError.code === \"42P01\")) {\n                    console.log(\"数据库连接成功!\");\n                    return true;\n                }\n                console.error(\"数据库连接测试失败:\", testError || error);\n                return false;\n            }\n            console.log(\"数据库连接成功!\");\n            return true;\n        } catch (err) {\n            console.error(\"连接测试异常:\", err);\n            return false;\n        }\n    }\n};\n// 收藏功能相关操作\nconst collectionOperations = {\n    // 收藏问题和答案\n    async saveCollection (userId, question, answer) {\n        try {\n            const { data, error } = await supabase.from(\"user_collections\").insert({\n                user_id: userId,\n                question: question,\n                answer: answer\n            }).select();\n            if (error) {\n                console.error(\"收藏保存失败:\", error);\n                throw error;\n            }\n            return data[0];\n        } catch (error) {\n            console.error(\"收藏操作异常:\", error);\n            throw error;\n        }\n    },\n    // 获取用户的收藏列表（分页）\n    async getUserCollections (userId, page = 1, pageSize = 10) {\n        try {\n            const offset = (page - 1) * pageSize;\n            const { data, error, count } = await supabase.from(\"user_collections\").select(\"*\", {\n                count: \"exact\"\n            }).eq(\"user_id\", userId).order(\"updated_at\", {\n                ascending: false\n            }).range(offset, offset + pageSize - 1);\n            if (error) {\n                console.error(\"获取收藏列表失败:\", error);\n                throw error;\n            }\n            return {\n                data: data || [],\n                total: count || 0,\n                page,\n                pageSize,\n                totalPages: Math.ceil((count || 0) / pageSize)\n            };\n        } catch (error) {\n            console.error(\"获取收藏列表异常:\", error);\n            throw error;\n        }\n    },\n    // 删除收藏项\n    async deleteCollections (collectionIds) {\n        try {\n            const { error } = await supabase.from(\"user_collections\").delete().in(\"id\", collectionIds);\n            if (error) {\n                console.error(\"删除收藏失败:\", error);\n                throw error;\n            }\n            return true;\n        } catch (error) {\n            console.error(\"删除收藏异常:\", error);\n            throw error;\n        }\n    },\n    // 检查问题和答案是否已被收藏\n    async checkIfCollected (userId, question, answerContent = null) {\n        try {\n            let query = supabase.from(\"user_collections\").select(\"id\").eq(\"user_id\", userId).eq(\"question\", question);\n            // 如果提供了答案内容，则同时检查答案\n            if (answerContent) {\n                query = query.ilike(\"answer\", `%${answerContent}%`);\n            }\n            const { data, error } = await query.limit(1);\n            if (error) {\n                console.error(\"检查收藏状态失败:\", error);\n                throw error;\n            }\n            return data && data.length > 0;\n        } catch (error) {\n            console.error(\"检查收藏状态异常:\", error);\n            throw error;\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFLLENBQUM7WUFFMUMsSUFBSWhELE9BQU87Z0JBQ1RpQyxRQUFRakMsS0FBSyxDQUFDLGFBQWFBO2dCQUMzQixNQUFNQTtZQUNSO1lBRUEsT0FBT2MsUUFBUUEsS0FBSzhELE1BQU0sR0FBRztRQUMvQixFQUFFLE9BQU81RSxPQUFPO1lBQ2RpQyxRQUFRakMsS0FBSyxDQUFDLGFBQWFBO1lBQzNCLE1BQU1BO1FBQ1I7SUFDRjtBQUNGLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mYW5nbHVlLXdlYnNpdGUvLi9saWIvc3VwYWJhc2UuanM/MTU5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tICdAc3VwYWJhc2Uvc3VwYWJhc2UtanMnXG5cbi8vIFN1cGFiYXNl6YWN572uIC0g5pSv5oyB546v5aKD5Y+Y6YeP5ZKMZmFsbGJhY2tcbmNvbnN0IHN1cGFiYXNlVXJsID0gcHJvY2Vzcy5lbnYuU1VQQUJBU0VfVVJMIHx8ICdodHRwczovL2NybmZ3bHBjeHJucWZnd3FubXVuLnN1cGFiYXNlLmNvJ1xuY29uc3Qgc3VwYWJhc2VBbm9uS2V5ID0gcHJvY2Vzcy5lbnYuU1VQQUJBU0VfQU5PTl9LRVkgfHwgJ2V5SmhiR2NpT2lKSVV6STFOaUlzSW5SNWNDSTZJa3BYVkNKOS5leUpwYzNNaU9pSnpkWEJoWW1GelpTSXNJbkpsWmlJNkltTnlibVozYkhCamVISnVjV1puZDNGdWJYVnVJaXdpY205c1pTSTZJbUZ1YjI0aUxDSnBZWFFpT2pFM05UVXhOVEF6TURRc0ltVjRjQ0k2TWpBM01EY3lOak13TkgwLmdfSG1GUVFpdUdXMlRaUnpaNWdxQ2owOThEWnk2aXduX3hRQUU2a0VVRUknXG5cbi8vIOWIm+W7ulN1cGFiYXNl5a6i5oi356uv5a6e5L6LXG5leHBvcnQgY29uc3Qgc3VwYWJhc2UgPSBjcmVhdGVDbGllbnQoc3VwYWJhc2VVcmwsIHN1cGFiYXNlQW5vbktleSlcblxuLy8gU3VwYWJhc2XplJnor6/kv6Hmga/mnKzlnLDljJZcbmV4cG9ydCBjb25zdCBsb2NhbGl6ZVN1cGFiYXNlRXJyb3IgPSAoZXJyb3IpID0+IHtcbiAgY29uc3QgZXJyb3JNZXNzYWdlcyA9IHtcbiAgICAnSW52YWxpZCBsb2dpbiBjcmVkZW50aWFscyc6ICfpgq7nrrHmiJblr4bnoIHplJnor68nLFxuICAgICdFbWFpbCBub3QgY29uZmlybWVkJzogJ+mCrueuseacqumqjOivge+8jOivt+ajgOafpeaCqOeahOmCrueusScsXG4gICAgJ1VzZXIgYWxyZWFkeSByZWdpc3RlcmVkJzogJ+ivpemCrueuseW3suazqOWGjCcsXG4gICAgJ1Bhc3N3b3JkIHNob3VsZCBiZSBhdCBsZWFzdCA2IGNoYXJhY3RlcnMnOiAn5a+G56CB6Iez5bCR6ZyA6KaBNuS9jeWtl+espicsXG4gICAgJ1NpZ251cCByZXF1aXJlcyBhIHZhbGlkIHBhc3N3b3JkJzogJ+azqOWGjOmcgOimgeacieaViOeahOWvhueggScsXG4gICAgJ0ludmFsaWQgZW1haWwnOiAn6YKu566x5qC85byP5LiN5q2j56GuJyxcbiAgICAnRW1haWwgcmF0ZSBsaW1pdCBleGNlZWRlZCc6ICfpgq7ku7blj5HpgIHpopHnjofov4fpq5jvvIzor7fnqI3lkI7lho3or5UnLFxuICAgICdUb28gbWFueSByZXF1ZXN0cyc6ICfor7fmsYLov4fkuo7popHnuYHvvIzor7fnqI3lkI7lho3or5UnLFxuICAgICdOZXR3b3JrIHJlcXVlc3QgZmFpbGVkJzogJ+e9kee7nOivt+axguWksei0pe+8jOivt+ajgOafpee9kee7nOi/nuaOpScsXG4gICAgJ1VzZXIgbm90IGZvdW5kJzogJ+eUqOaIt+S4jeWtmOWcqCcsXG4gICAgJ0VtYWlsIGFscmVhZHkgdGFrZW4nOiAn6K+l6YKu566x5bey6KKr5L2/55SoJyxcbiAgICAnV2VhayBwYXNzd29yZCc6ICflr4bnoIHlvLrluqbkuI3lpJ/vvIzor7fkvb/nlKjmm7TlpI3mnYLnmoTlr4bnoIEnLFxuICAgICdOZXcgcGFzc3dvcmQgc2hvdWxkIGJlIGRpZmZlcmVudCBmcm9tIHRoZSBvbGQgcGFzc3dvcmQnOiAn5paw5a+G56CB5LiN6IO95LiO5pen5a+G56CB55u45ZCMJyxcbiAgICAnbmV3IHBhc3N3b3JkIHNob3VsZCBiZSBkaWZmZXJlbnQgZnJvbSB0aGUgb2xkIHBhc3N3b3JkJzogJ+aWsOWvhueggeS4jeiDveS4juaXp+WvhueggeebuOWQjCcsXG4gICAgJ1Bhc3N3b3JkIHVwZGF0ZSBmYWlsZWQnOiAn5a+G56CB5pu05paw5aSx6LSl77yM6K+356iN5ZCO6YeN6K+VJyxcbiAgICAnU2Vzc2lvbiBub3QgZm91bmQnOiAn5Lya6K+d5bey6L+H5pyf77yM6K+36YeN5paw6I635Y+W6YeN572u6ZO+5o6lJyxcbiAgICAnSW52YWxpZCByZWNvdmVyeSB0b2tlbic6ICfph43nva7pk77mjqXml6DmlYjmiJblt7Lov4fmnJ/vvIzor7fph43mlrDnlLPor7cnLFxuICAgICdBdXRoIHNlc3Npb24gbWlzc2luZyc6ICforqTor4HkvJror53nvLrlpLHvvIzor7fph43mlrDojrflj5bph43nva7pk77mjqUnXG4gIH1cbiAgXG4gIC8vIOWkhOeQhuS4jeWQjOeahOmUmeivr+agvOW8j1xuICBsZXQgZXJyb3JNZXNzYWdlID0gJydcbiAgaWYgKHR5cGVvZiBlcnJvciA9PT0gJ3N0cmluZycpIHtcbiAgICBlcnJvck1lc3NhZ2UgPSBlcnJvclxuICB9IGVsc2UgaWYgKGVycm9yPy5tZXNzYWdlKSB7XG4gICAgZXJyb3JNZXNzYWdlID0gZXJyb3IubWVzc2FnZVxuICB9IGVsc2UgaWYgKGVycm9yPy5lcnJvcl9kZXNjcmlwdGlvbikge1xuICAgIGVycm9yTWVzc2FnZSA9IGVycm9yLmVycm9yX2Rlc2NyaXB0aW9uXG4gIH1cbiAgXG4gIC8vIOajgOafpeaYr+WQpuWMheWQq+aWsOaXp+WvhueggeebuOWQjOeahOmUmeivr+S/oeaBr1xuICBpZiAoZXJyb3JNZXNzYWdlLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoJ25ldyBwYXNzd29yZCBzaG91bGQgYmUgZGlmZmVyZW50JykpIHtcbiAgICByZXR1cm4gJ+aWsOWvhueggeS4jeiDveS4juaXp+WvhueggeebuOWQjCdcbiAgfVxuICBcbiAgcmV0dXJuIGVycm9yTWVzc2FnZXNbZXJyb3JNZXNzYWdlXSB8fCBlcnJvck1lc3NhZ2UgfHwgJ+WPkeeUn+acquefpemUmeivr++8jOivt+eojeWQjumHjeivlSdcbn1cblxuLy8g6K6k6K+B55u45YWz5Yqf6IO9XG5leHBvcnQgY29uc3QgYXV0aE9wZXJhdGlvbnMgPSB7XG4gIC8vIOeUqOaIt+azqOWGjFxuICBhc3luYyBzaWduVXAoZW1haWwsIHBhc3N3b3JkLCB1c2VybmFtZSkge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBzaXRlVXJsID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU0lURV9VUkwgfHwgJ2h0dHBzOi8vZmFuZ2x1ZS5vcmcnXG4gICAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZS5hdXRoLnNpZ25VcCh7XG4gICAgICAgIGVtYWlsLFxuICAgICAgICBwYXNzd29yZCxcbiAgICAgICAgb3B0aW9uczoge1xuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIHVzZXJuYW1lOiB1c2VybmFtZVxuICAgICAgICAgIH0sXG4gICAgICAgICAgZW1haWxSZWRpcmVjdFRvOiBgJHtzaXRlVXJsfS9hdXRoYFxuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgXG4gICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGxvY2FsaXplU3VwYWJhc2VFcnJvcihlcnJvcikpXG4gICAgICB9XG4gICAgICBcbiAgICAgIHJldHVybiBkYXRhXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihsb2NhbGl6ZVN1cGFiYXNlRXJyb3IoZXJyb3IpKVxuICAgIH1cbiAgfSxcbiAgXG4gIC8vIOeUqOaIt+eZu+W9lVxuICBhc3luYyBzaWduSW4oZW1haWwsIHBhc3N3b3JkKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlLmF1dGguc2lnbkluV2l0aFBhc3N3b3JkKHtcbiAgICAgICAgZW1haWwsXG4gICAgICAgIHBhc3N3b3JkXG4gICAgICB9KVxuICAgICAgXG4gICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGxvY2FsaXplU3VwYWJhc2VFcnJvcihlcnJvcikpXG4gICAgICB9XG4gICAgICBcbiAgICAgIHJldHVybiBkYXRhXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihsb2NhbGl6ZVN1cGFiYXNlRXJyb3IoZXJyb3IpKVxuICAgIH1cbiAgfSxcbiAgXG4gIC8vIOeUqOaIt+eZu+WHulxuICBhc3luYyBzaWduT3V0KCkge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCB7IGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZS5hdXRoLnNpZ25PdXQoKVxuICAgICAgXG4gICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGxvY2FsaXplU3VwYWJhc2VFcnJvcihlcnJvcikpXG4gICAgICB9XG4gICAgICBcbiAgICAgIHJldHVybiB0cnVlXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihsb2NhbGl6ZVN1cGFiYXNlRXJyb3IoZXJyb3IpKVxuICAgIH1cbiAgfSxcbiAgXG4gIC8vIOiOt+WPluW9k+WJjeeUqOaIt1xuICBhc3luYyBnZXRDdXJyZW50VXNlcigpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgeyBkYXRhOiB7IHVzZXIgfSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlLmF1dGguZ2V0VXNlcigpXG4gICAgICBcbiAgICAgIGlmIChlcnJvcikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IobG9jYWxpemVTdXBhYmFzZUVycm9yKGVycm9yKSlcbiAgICAgIH1cbiAgICAgIFxuICAgICAgcmV0dXJuIHVzZXJcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGxvY2FsaXplU3VwYWJhc2VFcnJvcihlcnJvcikpXG4gICAgfVxuICB9LFxuICBcbiAgLy8g55uR5ZCs6K6k6K+B54q25oCB5Y+Y5YyWXG4gIG9uQXV0aFN0YXRlQ2hhbmdlKGNhbGxiYWNrKSB7XG4gICAgcmV0dXJuIHN1cGFiYXNlLmF1dGgub25BdXRoU3RhdGVDaGFuZ2UoY2FsbGJhY2spXG4gIH1cbn1cblxuLy8g5pWw5o2u5bqT5pON5L2c5Ye95pWwXG5leHBvcnQgY29uc3QgZGJPcGVyYXRpb25zID0ge1xuICAvLyDmmrTpnLIgc3VwYWJhc2Ug5a6i5oi356uv5a6e5L6LXG4gIHN1cGFiYXNlLFxuICAvLyDmj5LlhaXmlbDmja5cbiAgYXN5bmMgaW5zZXJ0KHRhYmxlLCBkYXRhKSB7XG4gICAgY29uc3QgeyBkYXRhOiByZXN1bHQsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgLmZyb20odGFibGUpXG4gICAgICAuaW5zZXJ0KGRhdGEpXG4gICAgICAuc2VsZWN0KClcbiAgICBcbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ+aPkuWFpeaVsOaNrumUmeivrzonLCBlcnJvcilcbiAgICAgIHRocm93IGVycm9yXG4gICAgfVxuICAgIHJldHVybiByZXN1bHRcbiAgfSxcblxuICAvLyDmn6Xor6LmlbDmja5cbiAgYXN5bmMgc2VsZWN0KHRhYmxlLCBmaWx0ZXJzID0ge30pIHtcbiAgICBsZXQgcXVlcnkgPSBzdXBhYmFzZS5mcm9tKHRhYmxlKS5zZWxlY3QoJyonKVxuICAgIFxuICAgIC8vIOW6lOeUqOi/h+a7pOadoeS7tlxuICAgIE9iamVjdC5lbnRyaWVzKGZpbHRlcnMpLmZvckVhY2goKFtrZXksIHZhbHVlXSkgPT4ge1xuICAgICAgcXVlcnkgPSBxdWVyeS5lcShrZXksIHZhbHVlKVxuICAgIH0pXG4gICAgXG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgcXVlcnlcbiAgICBcbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ+afpeivouaVsOaNrumUmeivrzonLCBlcnJvcilcbiAgICAgIHRocm93IGVycm9yXG4gICAgfVxuICAgIHJldHVybiBkYXRhXG4gIH0sXG5cbiAgLy8g5pu05paw5pWw5o2uXG4gIGFzeW5jIHVwZGF0ZSh0YWJsZSwgaWQsIGRhdGEpIHtcbiAgICBjb25zdCB7IGRhdGE6IHJlc3VsdCwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAuZnJvbSh0YWJsZSlcbiAgICAgIC51cGRhdGUoZGF0YSlcbiAgICAgIC5lcSgnaWQnLCBpZClcbiAgICAgIC5zZWxlY3QoKVxuICAgIFxuICAgIGlmIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcign5pu05paw5pWw5o2u6ZSZ6K+vOicsIGVycm9yKVxuICAgICAgdGhyb3cgZXJyb3JcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdFxuICB9LFxuXG4gIC8vIOWIoOmZpOaVsOaNrlxuICBhc3luYyBkZWxldGUodGFibGUsIGlkKSB7XG4gICAgY29uc3QgeyBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgIC5mcm9tKHRhYmxlKVxuICAgICAgLmRlbGV0ZSgpXG4gICAgICAuZXEoJ2lkJywgaWQpXG4gICAgXG4gICAgaWYgKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCfliKDpmaTmlbDmja7plJnor686JywgZXJyb3IpXG4gICAgICB0aHJvdyBlcnJvclxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZVxuICB9LFxuXG4gIC8vIOa1i+ivlei/nuaOpVxuICBhc3luYyB0ZXN0Q29ubmVjdGlvbigpIHtcbiAgICB0cnkge1xuICAgICAgLy8g5L2/55So566A5Y2V55qEUlBD6LCD55So5p2l5rWL6K+V6L+e5o6lXG4gICAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZS5ycGMoJ3ZlcnNpb24nKVxuICAgICAgXG4gICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgLy8g5aaC5p6cUlBD6LCD55So5aSx6LSl77yM5bCd6K+V5p+l6K+i5LiA5Liq5Y+v6IO95LiN5a2Y5Zyo55qE6KGo5p2l5rWL6K+V6L+e5o6lXG4gICAgICAgIGNvbnN0IHsgZXJyb3I6IHRlc3RFcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgICAgICAuZnJvbSgndGVzdF9jb25uZWN0aW9uX3RhYmxlJylcbiAgICAgICAgICAuc2VsZWN0KCcqJylcbiAgICAgICAgICAubGltaXQoMSlcbiAgICAgICAgXG4gICAgICAgIC8vIOWmguaenOmUmeivr+aYr+ihqOS4jeWtmOWcqO+8jOivtOaYjui/nuaOpeato+W4uFxuICAgICAgICBpZiAodGVzdEVycm9yICYmICh0ZXN0RXJyb3IuY29kZSA9PT0gJ1BHUlNUMTE2JyB8fCB0ZXN0RXJyb3IuY29kZSA9PT0gJzQyUDAxJykpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygn5pWw5o2u5bqT6L+e5o6l5oiQ5YqfIScpXG4gICAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgY29uc29sZS5lcnJvcign5pWw5o2u5bqT6L+e5o6l5rWL6K+V5aSx6LSlOicsIHRlc3RFcnJvciB8fCBlcnJvcilcbiAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICB9XG4gICAgICBcbiAgICAgIGNvbnNvbGUubG9nKCfmlbDmja7lupPov57mjqXmiJDlip8hJylcbiAgICAgIHJldHVybiB0cnVlXG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCfov57mjqXmtYvor5XlvILluLg6JywgZXJyKVxuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuICB9XG59XG5cbi8vIOaUtuiXj+WKn+iDveebuOWFs+aTjeS9nFxuZXhwb3J0IGNvbnN0IGNvbGxlY3Rpb25PcGVyYXRpb25zID0ge1xuICAvLyDmlLbol4/pl67popjlkoznrZTmoYhcbiAgYXN5bmMgc2F2ZUNvbGxlY3Rpb24odXNlcklkLCBxdWVzdGlvbiwgYW5zd2VyKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAgIC5mcm9tKCd1c2VyX2NvbGxlY3Rpb25zJylcbiAgICAgICAgLmluc2VydCh7XG4gICAgICAgICAgdXNlcl9pZDogdXNlcklkLFxuICAgICAgICAgIHF1ZXN0aW9uOiBxdWVzdGlvbixcbiAgICAgICAgICBhbnN3ZXI6IGFuc3dlclxuICAgICAgICB9KVxuICAgICAgICAuc2VsZWN0KClcbiAgICAgIFxuICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ+aUtuiXj+S/neWtmOWksei0pTonLCBlcnJvcilcbiAgICAgICAgdGhyb3cgZXJyb3JcbiAgICAgIH1cbiAgICAgIFxuICAgICAgcmV0dXJuIGRhdGFbMF1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcign5pS26JeP5pON5L2c5byC5bi4OicsIGVycm9yKVxuICAgICAgdGhyb3cgZXJyb3JcbiAgICB9XG4gIH0sXG5cbiAgLy8g6I635Y+W55So5oi355qE5pS26JeP5YiX6KGo77yI5YiG6aG177yJXG4gIGFzeW5jIGdldFVzZXJDb2xsZWN0aW9ucyh1c2VySWQsIHBhZ2UgPSAxLCBwYWdlU2l6ZSA9IDEwKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IG9mZnNldCA9IChwYWdlIC0gMSkgKiBwYWdlU2l6ZVxuICAgICAgXG4gICAgICBjb25zdCB7IGRhdGEsIGVycm9yLCBjb3VudCB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgICAgLmZyb20oJ3VzZXJfY29sbGVjdGlvbnMnKVxuICAgICAgICAuc2VsZWN0KCcqJywgeyBjb3VudDogJ2V4YWN0JyB9KVxuICAgICAgICAuZXEoJ3VzZXJfaWQnLCB1c2VySWQpXG4gICAgICAgIC5vcmRlcigndXBkYXRlZF9hdCcsIHsgYXNjZW5kaW5nOiBmYWxzZSB9KVxuICAgICAgICAucmFuZ2Uob2Zmc2V0LCBvZmZzZXQgKyBwYWdlU2l6ZSAtIDEpXG4gICAgICBcbiAgICAgIGlmIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKCfojrflj5bmlLbol4/liJfooajlpLHotKU6JywgZXJyb3IpXG4gICAgICAgIHRocm93IGVycm9yXG4gICAgICB9XG4gICAgICBcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGRhdGE6IGRhdGEgfHwgW10sXG4gICAgICAgIHRvdGFsOiBjb3VudCB8fCAwLFxuICAgICAgICBwYWdlLFxuICAgICAgICBwYWdlU2l6ZSxcbiAgICAgICAgdG90YWxQYWdlczogTWF0aC5jZWlsKChjb3VudCB8fCAwKSAvIHBhZ2VTaXplKVxuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCfojrflj5bmlLbol4/liJfooajlvILluLg6JywgZXJyb3IpXG4gICAgICB0aHJvdyBlcnJvclxuICAgIH1cbiAgfSxcblxuICAvLyDliKDpmaTmlLbol4/poblcbiAgYXN5bmMgZGVsZXRlQ29sbGVjdGlvbnMoY29sbGVjdGlvbklkcykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCB7IGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgICAuZnJvbSgndXNlcl9jb2xsZWN0aW9ucycpXG4gICAgICAgIC5kZWxldGUoKVxuICAgICAgICAuaW4oJ2lkJywgY29sbGVjdGlvbklkcylcbiAgICAgIFxuICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ+WIoOmZpOaUtuiXj+Wksei0pTonLCBlcnJvcilcbiAgICAgICAgdGhyb3cgZXJyb3JcbiAgICAgIH1cbiAgICAgIFxuICAgICAgcmV0dXJuIHRydWVcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcign5Yig6Zmk5pS26JeP5byC5bi4OicsIGVycm9yKVxuICAgICAgdGhyb3cgZXJyb3JcbiAgICB9XG4gIH0sXG5cbiAgLy8g5qOA5p+l6Zeu6aKY5ZKM562U5qGI5piv5ZCm5bey6KKr5pS26JePXG4gIGFzeW5jIGNoZWNrSWZDb2xsZWN0ZWQodXNlcklkLCBxdWVzdGlvbiwgYW5zd2VyQ29udGVudCA9IG51bGwpIHtcbiAgICB0cnkge1xuICAgICAgbGV0IHF1ZXJ5ID0gc3VwYWJhc2VcbiAgICAgICAgLmZyb20oJ3VzZXJfY29sbGVjdGlvbnMnKVxuICAgICAgICAuc2VsZWN0KCdpZCcpXG4gICAgICAgIC5lcSgndXNlcl9pZCcsIHVzZXJJZClcbiAgICAgICAgLmVxKCdxdWVzdGlvbicsIHF1ZXN0aW9uKVxuICAgICAgXG4gICAgICAvLyDlpoLmnpzmj5DkvpvkuobnrZTmoYjlhoXlrrnvvIzliJnlkIzml7bmo4Dmn6XnrZTmoYhcbiAgICAgIGlmIChhbnN3ZXJDb250ZW50KSB7XG4gICAgICAgIHF1ZXJ5ID0gcXVlcnkuaWxpa2UoJ2Fuc3dlcicsIGAlJHthbnN3ZXJDb250ZW50fSVgKVxuICAgICAgfVxuICAgICAgXG4gICAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBxdWVyeS5saW1pdCgxKVxuICAgICAgXG4gICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcign5qOA5p+l5pS26JeP54q25oCB5aSx6LSlOicsIGVycm9yKVxuICAgICAgICB0aHJvdyBlcnJvclxuICAgICAgfVxuICAgICAgXG4gICAgICByZXR1cm4gZGF0YSAmJiBkYXRhLmxlbmd0aCA+IDBcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcign5qOA5p+l5pS26JeP54q25oCB5byC5bi4OicsIGVycm9yKVxuICAgICAgdGhyb3cgZXJyb3JcbiAgICB9XG4gIH1cbn0iXSwibmFtZXMiOlsiY3JlYXRlQ2xpZW50Iiwic3VwYWJhc2VVcmwiLCJwcm9jZXNzIiwiZW52IiwiU1VQQUJBU0VfVVJMIiwic3VwYWJhc2VBbm9uS2V5IiwiU1VQQUJBU0VfQU5PTl9LRVkiLCJzdXBhYmFzZSIsImxvY2FsaXplU3VwYWJhc2VFcnJvciIsImVycm9yIiwiZXJyb3JNZXNzYWdlcyIsImVycm9yTWVzc2FnZSIsIm1lc3NhZ2UiLCJlcnJvcl9kZXNjcmlwdGlvbiIsInRvTG93ZXJDYXNlIiwiaW5jbHVkZXMiLCJhdXRoT3BlcmF0aW9ucyIsInNpZ25VcCIsImVtYWlsIiwicGFzc3dvcmQiLCJ1c2VybmFtZSIsInNpdGVVcmwiLCJORVhUX1BVQkxJQ19TSVRFX1VSTCIsImRhdGEiLCJhdXRoIiwib3B0aW9ucyIsImVtYWlsUmVkaXJlY3RUbyIsIkVycm9yIiwic2lnbkluIiwic2lnbkluV2l0aFBhc3N3b3JkIiwic2lnbk91dCIsImdldEN1cnJlbnRVc2VyIiwidXNlciIsImdldFVzZXIiLCJvbkF1dGhTdGF0ZUNoYW5nZSIsImNhbGxiYWNrIiwiZGJPcGVyYXRpb25zIiwiaW5zZXJ0IiwidGFibGUiLCJyZXN1bHQiLCJmcm9tIiwic2VsZWN0IiwiY29uc29sZSIsImZpbHRlcnMiLCJxdWVyeSIsIk9iamVjdCIsImVudHJpZXMiLCJmb3JFYWNoIiwia2V5IiwidmFsdWUiLCJlcSIsInVwZGF0ZSIsImlkIiwiZGVsZXRlIiwidGVzdENvbm5lY3Rpb24iLCJycGMiLCJ0ZXN0RXJyb3IiLCJsaW1pdCIsImNvZGUiLCJsb2ciLCJlcnIiLCJjb2xsZWN0aW9uT3BlcmF0aW9ucyIsInNhdmVDb2xsZWN0aW9uIiwidXNlcklkIiwicXVlc3Rpb24iLCJhbnN3ZXIiLCJ1c2VyX2lkIiwiZ2V0VXNlckNvbGxlY3Rpb25zIiwicGFnZSIsInBhZ2VTaXplIiwib2Zmc2V0IiwiY291bnQiLCJvcmRlciIsImFzY2VuZGluZyIsInJhbmdlIiwidG90YWwiLCJ0b3RhbFBhZ2VzIiwiTWF0aCIsImNlaWwiLCJkZWxldGVDb2xsZWN0aW9ucyIsImNvbGxlY3Rpb25JZHMiLCJpbiIsImNoZWNrSWZDb2xsZWN0ZWQiLCJhbnN3ZXJDb250ZW50IiwiaWxpa2UiLCJsZW5ndGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./lib/supabase.js\n");

/***/ }),

/***/ "(api)/./pages/api/search-quotes.js":
/*!************************************!*\
  !*** ./pages/api/search-quotes.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/supabase */ \"(api)/./lib/supabase.js\");\n\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            error: \"仅支持POST请求\"\n        });\n    }\n    try {\n        const { question, strategy_category } = req.body;\n        if (!question || !strategy_category) {\n            return res.status(400).json({\n                error: \"缺少必要参数：question 和 strategy_category\"\n            });\n        }\n        console.log(\"收到搜索请求:\", {\n            question,\n            strategy_category\n        });\n        // 步骤1: 根据用户选定的方向从Supabase选择书籍\n        const selectedBook = await selectBookByStrategy(strategy_category);\n        if (!selectedBook) {\n            return res.status(404).json({\n                error: \"未找到对应策略的书籍\"\n            });\n        }\n        console.log(\"选中的书籍:\", selectedBook.book_name);\n        // 步骤2: 用AI搜索该书籍中回答用户问题的1-3句原文\n        const originalText = await searchOriginalTextWithAI(selectedBook.book_name, question);\n        if (!originalText) {\n            return res.status(500).json({\n                error: \"未能找到相关原文\",\n                quote: \"智者顺时而谋，愚者逆势而动。\",\n                bookName: selectedBook.book_name,\n                chapterName: \"经典智慧\",\n                source: `${selectedBook.book_name}·经典智慧`,\n                fromNetworkSearch: false\n            });\n        }\n        console.log(\"找到的原文:\", originalText);\n        // 步骤3: 根据原文用AI搜索对应的章节名称\n        const chapterName = await searchChapterNameWithAI(selectedBook.book_name, originalText);\n        console.log(\"识别的章节名:\", chapterName);\n        return res.status(200).json({\n            quote: originalText,\n            bookName: selectedBook.book_name,\n            chapterName: chapterName || \"未知章节\",\n            source: `${selectedBook.book_name}·${chapterName || \"未知章节\"}`,\n            searchQuery: question,\n            fromNetworkSearch: true,\n            strategy_category: strategy_category\n        });\n    } catch (error) {\n        console.error(\"搜索引用失败:\", error);\n        return res.status(500).json({\n            error: \"搜索服务暂时不可用\",\n            quote: \"智者顺时而谋，愚者逆势而动。\",\n            bookName: \"智慧经典\",\n            chapterName: \"第一章\",\n            source: \"智慧经典\\xb7第一章\",\n            fromNetworkSearch: false\n        });\n    }\n}\n// 根据策略类别从Supabase选择书籍\nasync function selectBookByStrategy(strategy_category) {\n    try {\n        const { data: books, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"book_library\").select(\"*\").eq(\"strategy_category\", strategy_category);\n        if (error) {\n            console.error(\"查询书籍失败:\", error);\n            return null;\n        }\n        if (!books || books.length === 0) {\n            console.log(\"未找到对应策略的书籍:\", strategy_category);\n            return null;\n        }\n        // 随机选择一本书\n        const randomIndex = Math.floor(Math.random() * books.length);\n        return books[randomIndex];\n    } catch (error) {\n        console.error(\"选择书籍时出错:\", error);\n        return null;\n    }\n}\n// 用AI搜索书籍中回答用户问题的原文\nasync function searchOriginalTextWithAI(bookName, question) {\n    try {\n        // 构建搜索查询\n        const searchQuery = `请从《${bookName}》中找出能够回答\"${question}\"这个问题的1-3句经典原文，要求：1. 必须是该书的原文内容；2. 内容要与问题高度相关；3. 返回格式为纯文本，不要解释`;\n        console.log(\"AI搜索原文查询:\", searchQuery);\n        // 调用DeepSeek API\n        const response = await fetch(\"https://api.deepseek.com/chat/completions\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer sk-3dd5328db9d44d9cb4e6e7df02ee4b2d\"\n            },\n            body: JSON.stringify({\n                model: \"deepseek-chat\",\n                messages: [\n                    {\n                        role: \"user\",\n                        content: searchQuery\n                    }\n                ],\n                temperature: 0.7,\n                max_tokens: 2000,\n                stream: false\n            })\n        });\n        if (!response.ok) {\n            console.log(\"DeepSeek API调用失败，尝试备用方案\");\n            return await searchOriginalTextFallback(bookName, question);\n        }\n        const data = await response.json();\n        if (data.choices && data.choices.length > 0 && data.choices[0].message.content && data.choices[0].message.content.length > 10) {\n            const content = data.choices[0].message.content;\n            // 提取原文内容\n            const originalText = extractOriginalText(content, bookName);\n            if (originalText && originalText.length > 10) {\n                return originalText;\n            }\n        }\n        // 如果API结果不理想，使用备用方案\n        return await searchOriginalTextFallback(bookName, question);\n    } catch (error) {\n        console.error(\"AI搜索原文失败:\", error);\n        return await searchOriginalTextFallback(bookName, question);\n    }\n}\n// 备用方案：从数据库内容中搜索原文\nasync function searchOriginalTextFallback(bookName, question) {\n    try {\n        const { data: books, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"book_library\").select(\"*\").eq(\"book_name\", bookName).limit(1);\n        if (error || !books || books.length === 0) {\n            return null;\n        }\n        const book = books[0];\n        if (!book.chapter_content) {\n            return null;\n        }\n        // 从章节内容中提取相关句子\n        const sentences = extractRelevantSentences(book.chapter_content, question);\n        if (sentences.length > 0) {\n            return sentences.slice(0, 3).join(\"，\");\n        }\n        return null;\n    } catch (error) {\n        console.error(\"备用搜索失败:\", error);\n        return null;\n    }\n}\n// 用AI搜索章节名称\nasync function searchChapterNameWithAI(bookName, originalText) {\n    try {\n        const searchQuery = `这段原文\"${originalText}\"出自《${bookName}》的哪个章节？请只返回章节名称，不要其他解释`;\n        console.log(\"AI搜索章节名查询:\", searchQuery);\n        const response = await fetch(\"https://api.deepseek.com/chat/completions\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer sk-3dd5328db9d44d9cb4e6e7df02ee4b2d\"\n            },\n            body: JSON.stringify({\n                model: \"deepseek-chat\",\n                messages: [\n                    {\n                        role: \"user\",\n                        content: searchQuery\n                    }\n                ],\n                temperature: 0.7,\n                max_tokens: 2000,\n                stream: false\n            })\n        });\n        if (!response.ok) {\n            return await searchChapterNameFallback(bookName, originalText);\n        }\n        const data = await response.json();\n        if (data.choices && data.choices.length > 0 && data.choices[0].message.content) {\n            const chapterName = extractChapterName(data.choices[0].message.content);\n            if (chapterName) {\n                return chapterName;\n            }\n        }\n        return await searchChapterNameFallback(bookName, originalText);\n    } catch (error) {\n        console.error(\"AI搜索章节名失败:\", error);\n        return await searchChapterNameFallback(bookName, originalText);\n    }\n}\n// 备用方案：从数据库获取章节名\nasync function searchChapterNameFallback(bookName, originalText) {\n    try {\n        const { data: books, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"book_library\").select(\"*\").eq(\"book_name\", bookName);\n        if (error || !books || books.length === 0) {\n            return \"经典篇章\";\n        }\n        // 尝试在章节内容中找到匹配的原文\n        for (const book of books){\n            if (book.chapter_content && book.chapter_content.includes(originalText.substring(0, 10))) {\n                return book.chapter_name || \"经典篇章\";\n            }\n        }\n        // 如果没找到匹配，返回第一个章节名\n        return books[0].chapter_name || \"经典篇章\";\n    } catch (error) {\n        console.error(\"备用章节名搜索失败:\", error);\n        return \"经典篇章\";\n    }\n}\n// 从搜索结果中提取原文\nfunction extractOriginalText(content, bookName) {\n    if (!content) return null;\n    // 移除HTML标签和多余空白\n    let text = content.replace(/<[^>]*>/g, \"\").trim();\n    // 移除数字序号（如\"1. \"、\"2. \"等）\n    text = text.replace(/^\\d+[.、]\\s*/gm, \"\");\n    // 移除解释性文字和括号内容\n    text = text.replace(/\\([^)]*\\)/g, \"\").replace(/（[^）]*）/g, \"\");\n    text = text.replace(/此句[^。]*。?/g, \"\").replace(/这句话[^。]*。?/g, \"\");\n    text = text.replace(/出自[^。]*。?/g, \"\").replace(/来源[^。]*。?/g, \"\");\n    // 移除书名信息，避免在source中重复显示书名\n    if (bookName) {\n        const bookNameRegex = new RegExp(`《?${bookName.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\")}》?[·\\s]*`, \"gi\");\n        text = text.replace(bookNameRegex, \"\");\n    }\n    // 移除章节名前缀（如\"垦令》：\"、\"兵法》：\"等）\n    text = text.replace(/.*?》：\"/g, \"\");\n    text = text.replace(/.*?】：\"/g, \"\");\n    text = text.replace(/.*?〉：\"/g, \"\");\n    text = text.replace(/.*?》：/g, \"\");\n    text = text.replace(/.*?】：/g, \"\");\n    text = text.replace(/.*?〉：/g, \"\");\n    // 移除冒号前的所有内容（包括策略名称等）\n    text = text.replace(/^[^：]*：/gm, \"\");\n    // 移除引号和书名号\n    text = text.replace(/[\"\"''「」『』《》]/g, \"\");\n    // 移除重复的引号（如开头的\"\"）\n    text = text.replace(/^[\"\"'']+/g, \"\").replace(/[\"\"'']+$/g, \"\");\n    // 移除其他可能的前缀标识\n    text = text.replace(/^[\\s]*[-—•·]\\s*/gm, \"\");\n    // 查找纯净的古文句子\n    const sentences = text.split(/[。！？；]/).filter((s)=>s.length > 5 && s.length < 50);\n    for (const sentence of sentences){\n        const cleanSentence = sentence.trim();\n        // 优先选择古典文本风格的句子\n        if (isClassicalText(cleanSentence) && !cleanSentence.includes(\"《\") && !cleanSentence.includes(\"篇\")) {\n            return cleanSentence;\n        }\n    }\n    // 如果没找到古典句子，返回第一个合适长度的句子\n    for (const sentence of sentences){\n        const cleanSentence = sentence.trim();\n        if (cleanSentence.length >= 10 && cleanSentence.length <= 30 && !cleanSentence.includes(\"《\")) {\n            return cleanSentence;\n        }\n    }\n    // 最后备选：返回第一句\n    return sentences.length > 0 ? sentences[0].trim() : null;\n}\n// 从章节名搜索结果中提取章节名\nfunction extractChapterName(content) {\n    if (!content) return null;\n    const text = content.replace(/<[^>]*>/g, \"\").trim();\n    // 常见的章节名模式\n    const patterns = [\n        /第[一二三四五六七八九十\\d]+章[：:]?([^，。！？；]+)/,\n        /第[一二三四五六七八九十\\d]+篇[：:]?([^，。！？；]+)/,\n        /([^，。！？；]{2,10})[章篇]/,\n        /《[^》]+》([^，。！？；]{2,15})/\n    ];\n    for (const pattern of patterns){\n        const match = text.match(pattern);\n        if (match) {\n            return match[1] ? match[1].trim() : match[0].trim();\n        }\n    }\n    // 如果没有匹配到模式，尝试提取短语\n    const words = text.split(/[，。！？；\\s]+/).filter((w)=>w.length >= 2 && w.length <= 8);\n    if (words.length > 0) {\n        return words[0];\n    }\n    return null;\n}\n// 从章节内容中提取相关句子\nfunction extractRelevantSentences(content, question) {\n    if (!content) return [];\n    const sentences = content.split(/[。！？；]/).filter((s)=>s.length > 5);\n    const questionKeywords = extractKeywords(question);\n    const relevantSentences = sentences.filter((sentence)=>{\n        return questionKeywords.some((keyword)=>sentence.includes(keyword));\n    }).slice(0, 3);\n    return relevantSentences.length > 0 ? relevantSentences : sentences.slice(0, 2);\n}\n// 提取问题关键词\nfunction extractKeywords(question) {\n    // 移除常见的疑问词和助词\n    const stopWords = [\n        \"如何\",\n        \"怎么\",\n        \"什么\",\n        \"为什么\",\n        \"哪个\",\n        \"哪些\",\n        \"应该\",\n        \"可以\",\n        \"能够\",\n        \"的\",\n        \"了\",\n        \"吗\",\n        \"呢\",\n        \"吧\"\n    ];\n    const words = question.split(/[\\s，。！？；]+/).filter((word)=>word.length >= 2 && !stopWords.includes(word));\n    return words;\n}\n// 判断是否为古典文本\nfunction isClassicalText(text) {\n    const classicalPatterns = [\n        /[之乎者也矣焉]/,\n        /[君子小人]/,\n        /[天下国家]/,\n        /[道德仁义]/,\n        /[智勇仁]/\n    ];\n    return classicalPatterns.some((pattern)=>pattern.test(text));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/search-quotes.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsearch-quotes&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fsearch-quotes.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();